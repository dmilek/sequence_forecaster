name: CI_test_workflow_call
on:
  workflow_call:
env:  # Global environment variables for the workflow
  FINE_GRAINED_PAT: ${{ secrets.FINE_GRAINED_PAT }}  #  Securely access PAT from GitHub secrets
  REPO_OWNER: ${{ secrets.REPO_OWNER }}  # Repository owner from secrets
  REPO_NAME: ${{ secrets.REPO_NAME }}  # Repository name from secrets
  DATA_FILE_PATH: ${{ secrets.DATA_FILE_PATH }}  # Path to CSV file in the repository

jobs:
  run-python-project:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
           repository: dmilek/sequence_forecaster
           ref: main
           token: ${{ secrets.GITHUB_TOKEN }}
           
      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13" # Specify your Python version

      # Step 3: Install dependencies
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 4: Run the Python script and generate HTML report
      - name: Generate HTML Report
        id: generate_html_report
        run: |
          html_report=$(python main.py)
          echo "html_report<<EOF" >> $GITHUB_ENV
          echo "$html_report" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          
      # Step 5: Set Git user for commit
      - name: Set Git user
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          
      # Step 6: Commit generated CSV and model file
      - name: Commit updated files
        run: |
          git add data/predicted_numbers.csv
          git add data/bayesian_model.pkl
          git commit -m "Update model and predictions [skip ci]" || echo "No changes to commit"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 7: Send the report via email
      - name: Send Email with HTML Report
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: 'Daily Sequence Forecaster - Predicted Numbers'
          from: 'Notification Service <notification.service1988@gmail.com>'  # Your sender email address
          html_body: ${{ env.html_report }}  # Use the HTML report generated in step 4
          to: ${{ secrets.EMAIL_RECIPIENT }} # Replace with recipient's email
